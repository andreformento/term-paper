buildscript {
    ext {
        springBootVersion = '1.5.8.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
        classpath "gradle.plugin.com.github.lkishalmi.gatling:gradle-gatling-plugin:0.7.1"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'
apply plugin: "com.github.lkishalmi.gatling"

group = 'andreformento'
//version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

jar {
    baseName = 'realtimeticket'
    version = '1.0.0-SNAPSHOT' //${project.version}
}

task buildDocker(type: Docker, dependsOn: build) {
    push = false
    applicationName = jar.baseName + '-ticketservice'
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-hateoas')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile('com.google.guava:guava:21.0')
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jdk8')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('nl.jqno.equalsverifier:equalsverifier:2.3')
    testCompile("org.assertj:assertj-core:3.8.0")

    testCompile('net.javacrumbs.json-unit:json-unit-fluent:1.23.0')
    testCompile('io.rest-assured:rest-assured:3.0.3')
    testCompile('io.rest-assured:json-schema-validator:3.0.3')
    testCompile('io.rest-assured:spring-mock-mvc:3.0.3')

    testCompile("de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.0.0")

    gatling 'com.google.code.gson:gson:2.8.0'
    gatlingCompile 'org.apache.commons:commons-lang3:3.4'
//    gatlingRuntime 'cglib:cglib-nodep:3.2.0'
}

project.sourceSets {
    gatling {
        scala.srcDirs = ['src/test/gatling']
        resources.srcDirs = ['src/test/gatling/user-files/simulations', 'src/test/gatling/user-files/data', 'src/test/gatling/user-files/body', 'src/test/gatling/conf']
    }
}

gatling {
    sourceRoot = 'src/test/gatling'
    simulationsDir = 'user-files/simulations'
    dataDir = 'user-files/data'
    bodiesDir = 'user-files/bodies'
    confDir = 'conf'
}
