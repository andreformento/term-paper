apiVersion: apps/v1beta2 # for versions before 1.8.0 use apps/v1beta1
kind: Deployment
metadata:
  name: realtimeticket-deployment
spec:
  selector:
    matchLabels:
      app: ticketreservation
  replicas: 1 # tells deployment to run 1 pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: ticketreservation
    spec:
      containers:
      - name: ticketreservation
        image: andreformento/realtimeticket-ticketreservation
        env:
        - name: SPRING_REDIS_HOSTNAME
          value: "redisdb"
        - name: SPRING_REDIS_PORT
          value: "6379"
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: "kubernetes-demo-app-service"
spec:
  selector:
    app: "ticketreservation" # Label to query pods by
  type: NodePort # Important! This will expose a node port over your Kubernetes IP
  ports:
  - protocol: "TCP"
    port: 8000
    nodePort: 32222 # Port youâ€™ll use to access app through the Kubernetes IP
    targetPort: 8000
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: "kubernetes-demo-app-ingress-service"
spec:
  rules:
  - host: kubernetes-demo-app.local # Must be added to /etc/hosts
    http:
      paths:
      - path: /
        backend:
          serviceName: "kubernetes-demo-app-service"
          servicePort: 8000
